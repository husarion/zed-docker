name: Selected Docker Image Build & Push 

on:
  workflow_dispatch:
    inputs:
      dockerfile:
        description: "Type Dockerfile version to build"
        default: "desktop"
        type: choice
        options:
          - cpu
          - desktop
          - jetson   
          - jetson_l4t32
      target_release:
        description: "Specify the version of the existing docker image (eg. 1.0.12)"
        type: string
        default: "0.0.0"
      runner:
        description: "Specify the platform on which the image will be built"
        required: true
        default: 'ubuntu-latest'
        type: choice
        options:
          - ubuntu-latest
          - jetson   


jobs:
  build:
    runs-on: ${{ inputs.runner }}

    steps:
      - name: Set variables
        run: |
          if [[ "${{ inputs.dockerfile }}" == "desktop" ]]; then
            echo "REPO_NAME=zed-desktop" >> $GITHUB_ENV            echo "REPO_NAME=zed-desktop" >> $GITHUB_ENV
            echo "ROS_DISTRO=noetic" >> $GITHUB_ENV
            echo "PLATFORM=linux/amd64" >> $GITHUB_ENV
          elif [[ "${{ inputs.dockerfile }}" == "cpu" ]]; then
            echo "REPO_NAME=zed-desktop-cpu" >> $GITHUB_ENV
            echo "ROS_DISTRO=noetic" >> $GITHUB_ENV
            echo "PLATFORM=[linux/amd64, linux/arm64, linux/arm64/v8]" >> $GITHUB_ENV
          elif [[ "${{ inputs.dockerfile }}" == "jetson" ]]; then
            echo "REPO_NAME=zed-jetson" >> $GITHUB_ENV
            echo "ROS_DISTRO=noetic" >> $GITHUB_ENV
            echo "PLATFORM=linux/arm64" >> $GITHUB_ENV
          else
            echo "REPO_NAME=zed-jetson" >> $GITHUB_ENV
            echo "ROS_DISTRO=melodic" >> $GITHUB_ENV
            echo "PLATFORM=linux/arm64" >> $GITHUB_ENV
          fi


    strategy:
      fail-fast: false
      matrix:

        include:
          - platform: ${{ env.PLATFORM }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set SHORT_DATE env
        run: echo "SHORT_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
        shell: bash

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ${{ inputs.dockerfile }}
          platforms: ${{ matrix.platform }}
          push: true
          build-args: |
            ROS_DISTRO=${{ env.ROS_DISTRO }}
          tags: |
            husarion/${{ env.REPO_NAME }}:${{ env.ROS_DISTRO }}
            husarion/${{ env.REPO_NAME }}:${{ env.ROS_DISTRO }}-nightly
            husarion/${{ env.REPO_NAME }}:${{ env.ROS_DISTRO }}-${{ inputs.target_release }}
            husarion/${{ env.REPO_NAME }}:${{ env.ROS_DISTRO }}-${{ inputs.target_release }}-${{ env.SHORT_DATE }}
            husarion/${{ env.REPO_NAME }}:${{ env.ROS_DISTRO }}-${{ inputs.target_release }}-${{ env.SHORT_DATE }}-stable